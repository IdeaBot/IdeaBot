<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>70</y>
      <w>330</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>Bot : discord.Client
--
+ __init__(self, config)
- addData(self, name[, content_from="DEFAULT"])
+ registerCommand(self, command)
+ registerPlugin(self, plugin)
# on_message(self, msg)
--
// dictionary of loaded data files (config, perms, etc.). Should be filled during __init__
- data : dict
- commands : list
- plugins : list
+ mutex // To ensure no weirdness happens with send_message calls (unless this is already thread safe)
--
(public static final vars)
CREDENTIALS
CHANNELS
PERMS
FORUM_DISCORD_USER
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>50</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>SimpleClass</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>450</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Scraper
&lt;&lt;interface&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>410</y>
      <w>240</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Command
// A command is something which happens in response to a message sent in discord
&lt;&lt;interface&gt;&gt;
--
+ __init__(self[, perms])
+ matches(self, msg) : bool
+ action(self, msg, send_msg : func)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>400</x>
      <y>380</y>
      <w>210</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Plugin
// A plugin is something which runs in the background, not interacting with discord messages
&lt;&lt;interface&gt;&gt;
--
+ __init__(self, send_msg : func)
+ action(self,) // loop?</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>450</y>
      <w>220</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
can include</panel_attributes>
    <additional_attributes>10.0;20.0;120.0;20.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>310</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>310</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>40</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Main
--
main()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>760</x>
      <y>130</y>
      <w>300</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>for command in commands:
  if command.matches(msg):
    command.action(msg, self.send_message)
    break
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>160</y>
      <w>200</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
</diagram>
